{"title":"2018-12/es6-module.md","path":"2018-12/es6-module","slug":"2018-12_es6-module","html":"<h2 id=\"export\"><code>export</code></h2>\n<ol>\n<li>输出变量。</li>\n</ol>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-string\">'GzhiYi'</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> job = <span class=\"hljs-string\">'Frontend'</span>;</code></pre>\n<p>以上可简写（荐）：</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-string\">'GzhiYi'</span>;\n<span class=\"hljs-keyword\">const</span> job = <span class=\"hljs-string\">'Frontend'</span>;\n\n<span class=\"hljs-keyword\">export</span> { name, job };</code></pre>\n<ol start=\"2\">\n<li>输出函数或者类<code>class</code>。</li>\n</ol>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">exportMe</span> (<span class=\"hljs-params\"></span>) </span>{}\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">exportMeToo</span> </span>{}</code></pre>\n<ol start=\"3\">\n<li>关键字<code>as</code>重命名输出。</li>\n</ol>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-string\">'GzhiYi'</span>;\n<span class=\"hljs-keyword\">const</span> job = <span class=\"hljs-string\">'Frontend'</span>;\n\n<span class=\"hljs-keyword\">export</span> {\n   name <span class=\"hljs-keyword\">as</span> changeName,\n   job <span class=\"hljs-keyword\">as</span> changeJob  \n};</code></pre>\n<h2 id=\"import\"><code>import</code></h2>\n<ol>\n<li>导入<code>export</code>输出的接口。</li>\n</ol>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> { name, job } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'filePath'</span>;\n<span class=\"hljs-comment\">// import 进来的变量均是readOnly，也不建议改写引入的其它类型数据。</span></code></pre>\n<ol start=\"2\">\n<li>关键字<code>as</code>重命名输入。</li>\n</ol>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> { name <span class=\"hljs-keyword\">as</span> changName } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'filePath'</span>;</code></pre>\n<h2 id=\"整体引入\">整体引入</h2>\n<pre><code class=\"language-javascript\"><span class=\"hljs-comment\">// 假设demo.js文件有如下内容</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">funA</span> (<span class=\"hljs-params\"></span>) </span>{}\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">funB</span> (<span class=\"hljs-params\"></span>) </span>{}\n\n<span class=\"hljs-keyword\">export</span> { funA, funB };\n\n<span class=\"hljs-comment\">// 平常加载</span>\n<span class=\"hljs-keyword\">import</span> { funA, funB } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./demo'</span>;\n\n<span class=\"hljs-comment\">// 整体引入</span>\n<span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> allFun <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./demo'</span>;\nallFun.funA();\nallFun.funB();</code></pre>\n<h2 id=\"export-defalut-指定默认输出\"><code>export defalut</code> 指定默认输出</h2>\n<pre><code class=\"language-javascript\"><span class=\"hljs-comment\">// demo.js</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{};\n\n<span class=\"hljs-comment\">// 引入</span>\n<span class=\"hljs-keyword\">import</span> funName <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'demo'</span>; \n<span class=\"hljs-comment\">// 不需要知道封装demo.js包含的函数名，import后无需接大括号，因为默认输出的只有一个。</span></code></pre>\n","fmData":{"attributes":{"title":"ES6 Module语法小结","description":"ES6 Module语法小结","keywords":"es6,ES6,module","labels":["前端"],"date":"2018-12-12T00:00:00.000Z"},"body":"## `export`\n\n1. 输出变量。\n\n```javascript\nexport const name = 'GzhiYi';\nexport const job = 'Frontend';\n```\n以上可简写（荐）：\n```javascript\nconst name = 'GzhiYi';\nconst job = 'Frontend';\n\nexport { name, job };\n```\n2. 输出函数或者类`class`。\n\n```javascript\nexport function exportMe () {}\nexport class exportMeToo {}\n```\n\n3. 关键字`as`重命名输出。\n\n```javascript\nconst name = 'GzhiYi';\nconst job = 'Frontend';\n\nexport {\n   name as changeName,\n   job as changeJob  \n};\n```\n\n## `import`\n\n1. 导入`export`输出的接口。\n\n```javascript\nimport { name, job } from 'filePath';\n// import 进来的变量均是readOnly，也不建议改写引入的其它类型数据。\n```\n2. 关键字`as`重命名输入。\n\n```javascript\nimport { name as changName } from 'filePath';\n```\n\n## 整体引入\n\n```javascript\n// 假设demo.js文件有如下内容\nfunction funA () {}\nfunction funB () {}\n\nexport { funA, funB };\n\n// 平常加载\nimport { funA, funB } from './demo';\n\n// 整体引入\nimport * as allFun from './demo';\nallFun.funA();\nallFun.funB();\n```\n\n## `export defalut` 指定默认输出\n\n```javascript\n// demo.js\nexport default function () {};\n\n// 引入\nimport funName from 'demo'; \n// 不需要知道封装demo.js包含的函数名，import后无需接大括号，因为默认输出的只有一个。\n```\n","bodyBegin":10,"frontmatter":"title: ES6 Module语法小结\ndescription: ES6 Module语法小结\nkeywords: es6,ES6,module\nlabels: ['前端']\ndate: 2018-12-12"}}