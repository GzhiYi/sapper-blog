{"title":"2018/12/koa-async.md","path":"2018/12/koa-async","slug":"2018_12_koa-async","html":"<p><img align=\"center\" style=\"width: 100%;\" data-zoomable src=\"https://github.com/koajs/koa/raw/master/docs/logo.png\" alt=\"koa\" >\n最近用koa写个微信小程序二维码生成接口，出现了一个小坑：由于小程序二维码生成接口返回的是二进制流，需要通过fs操作生成图片返回给前端下载。期间反复出现下载文件大小为0（零 / 大小未知）的情况。  </p>\n<p><strong>主要生成二维码代码如下</strong></p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-comment\">// 其余代码省略</span>\n<span class=\"hljs-keyword\">const</span> writeS = fs.createWriteStream(<span class=\"hljs-string\">'qrcode.png'</span>)\n<span class=\"hljs-keyword\">await</span> request({\n  <span class=\"hljs-attr\">uri</span>: <span class=\"hljs-string\">`https://api.weixin.qq.com/wxa/getwxacode?access_token=<span class=\"hljs-subst\">${token}</span>`</span>,\n  <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'post'</span>,\n  <span class=\"hljs-attr\">body</span>: data,\n  <span class=\"hljs-attr\">json</span>: <span class=\"hljs-literal\">true</span>\n}).pipe(writeS)\n<span class=\"hljs-comment\">// 其余代码省略</span></code></pre>\n<p>需要有个先后顺序问题，必须先等到文件写完后才能进行图片下载接口调用。处理方法是在前端调用生成二维码的接口，而接口的操作需要有个等待过程，即要在<code>createWriteStream</code>结束后<strong>生成二维码接口</strong>才返回数据。  </p>\n<p>前端在接收到<strong>生成二维码接口</strong>返回数据后才调用下载二维码接口。  </p>\n<p>koa端等待写文件结束后返回，这里koa要用promise在callback后触发返回数据：</p>\n<pre><code class=\"language-javascript\"> ctx.body = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\n    writeS.on(<span class=\"hljs-string\">'finish'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n      resolve({\n        <span class=\"hljs-attr\">code</span>: <span class=\"hljs-number\">1</span>\n      })\n    })\n  })</code></pre>\n<p>前端监听操作：</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">if</span> (res.data.code === <span class=\"hljs-number\">1</span>) {\n  <span class=\"hljs-built_in\">window</span>.open(<span class=\"hljs-string\">'图片下载地址'</span>)\n}</code></pre>\n<p>具体接口代码（<a href=\"https://github.com/GzhiYi/wxqrcode-generater/blob/master/index.js\">查看</a>）</p>\n","fmData":{"attributes":{"title":"koa异步写文件遇到的小问题","description":"最近用koa写个微信小程序二维码生成接口，出现了一个小坑：由于小程序二维码生成接口返回的是二进制流，需要通过fs操作生成图片返回给前端下载。期间反复出现下载文件大小为0（零 / 大小未知）的情况。","keywords":"koa,async,file","labels":["前端"],"date":"2018-12-13T00:00:00.000Z"},"body":"![koa](https://github.com/koajs/koa/raw/master/docs/logo.png)\n最近用koa写个微信小程序二维码生成接口，出现了一个小坑：由于小程序二维码生成接口返回的是二进制流，需要通过fs操作生成图片返回给前端下载。期间反复出现下载文件大小为0（零 / 大小未知）的情况。  \n\n**主要生成二维码代码如下**\n\n```javascript\n// 其余代码省略\nconst writeS = fs.createWriteStream('qrcode.png')\nawait request({\n  uri: `https://api.weixin.qq.com/wxa/getwxacode?access_token=${token}`,\n  method: 'post',\n  body: data,\n  json: true\n}).pipe(writeS)\n// 其余代码省略\n```\n需要有个先后顺序问题，必须先等到文件写完后才能进行图片下载接口调用。处理方法是在前端调用生成二维码的接口，而接口的操作需要有个等待过程，即要在`createWriteStream`结束后**生成二维码接口**才返回数据。  \n\n前端在接收到**生成二维码接口**返回数据后才调用下载二维码接口。  \n\nkoa端等待写文件结束后返回，这里koa要用promise在callback后触发返回数据：\n\n```javascript\n ctx.body = await new Promise((resolve, reject) => {\n    writeS.on('finish', function () {\n      resolve({\n        code: 1\n      })\n    })\n  })\n```\n前端监听操作：\n\n```javascript\nif (res.data.code === 1) {\n  window.open('图片下载地址')\n}\n```\n\n具体接口代码（[查看](https://github.com/GzhiYi/wxqrcode-generater/blob/master/index.js)）","bodyBegin":9,"frontmatter":"title: koa异步写文件遇到的小问题\ndescription: 最近用koa写个微信小程序二维码生成接口，出现了一个小坑：由于小程序二维码生成接口返回的是二进制流，需要通过fs操作生成图片返回给前端下载。期间反复出现下载文件大小为0（零 / 大小未知）的情况。\nkeywords: koa,async,file\nlabels: ['前端']\ndate: 2018-12-13"}}