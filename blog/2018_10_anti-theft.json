{"title":"防盗链的解析","description":"最近涉及到了图片防盗链的问题，链接是特殊的，不能被其他网站解析为图片。说下来有几种办法，当然解决后发现还是最后那种简单便捷。唯一的缺点就是大概也许差不多可能无法访问到。这个没关系，只要保佑保佑，总会比加iframe轻松愉悦的。","keywords":"防盗链","labels":["前端"],"date":"2018-10-15","path":"2018/10/anti-theft.md","slug":"2018_10_anti-theft","html":"<h3 id=\"前言\">前言</h3>\n<p>最近涉及到了图片防盗链的问题，链接是特殊的，不能被其他网站解析为图片。说下来有几种办法，当然解决后发现还是最后那种简单便捷。唯一的缺点就是大概也许差不多可能无法访问到。这个没关系，只要保佑保佑，总会比加iframe轻松愉悦的。  </p>\n<p>首先，你看到的图片会是这样的：</p>\n<p><img align=\"center\" style=\"width: 100%;margin-bottom: 20px;border-radius: 8px;background: #f8fdf3;\" data-zoomable src=\"https://mmbiz.qpic.cn/mmbiz_jpg/cfehZicXpD0ib9BP0iafksSmxPcWm4ORDGkD5ibHIHeWSyWjHriaFGhHLFvZNwiau4icCOBvT56MktVFATAf1D8vuyOHw/0?wx_fmt=jpeg\" alt=\"例图\" >  </p>\n<p>实际上，如果你能看到上面这张图，说明你骨骼精奇，自带解锁功能。\n但是我们想直接看到：  </p>\n<p><img align=\"center\" style=\"width: 100%;margin-bottom: 20px;border-radius: 8px;background: #f8fdf3;\" data-zoomable src=\"https://images.weserv.nl/?url=//mmbiz.qpic.cn/mmbiz_jpg/cfehZicXpD0ib9BP0iafksSmxPcWm4ORDGkD5ibHIHeWSyWjHriaFGhHLFvZNwiau4icCOBvT56MktVFATAf1D8vuyOHw/0?wx_fmt=jpeg\" alt=\"例图\" >  </p>\n<p>那怎么做呢？</p>\n<h3 id=\"页面头部加入标签\">页面头部加入<mate>标签</h3>\n<pre><code class=\"language-html\">&lt;meta <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-string\">&quot;referrer&quot;</span> <span class=\"hljs-attribute\">content</span>=<span class=\"hljs-string\">&quot;never&quot;</span>&gt;\n</code></pre>\n<p>这种办法通过控制referer绕过防盗链的检测。html可以通过这个参数决定http请求中的referer，要注意使用这个标签属性的时候，浏览器原有的referer策略就发生改变了。</p>\n<h3 id=\"图片在iframe内显示\">图片在iframe内显示</h3>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-built_in\">url</span>=<span class=\"hljs-string\">&#x27;防盗的链接&#x27;</span>;\n<span class=\"hljs-keyword\">let</span> finalUrl = displayImg(<span class=\"hljs-built_in\">url</span>);\n<span class=\"hljs-built_in\">console</span>.log(finalUrl);\n<span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">&#x27;img&#x27;</span>).innerHTML = finalUrl;\n\ndisplayImg = (<span class=\"hljs-built_in\">url</span>) =&gt; {\n    <span class=\"hljs-keyword\">let</span> iFrameid = <span class=\"hljs-string\">&#x27;frameimg&#x27;</span> + <span class=\"hljs-built_in\">Math</span>.random();\n    <span class=\"hljs-built_in\">window</span>.img = <span class=\"hljs-string\">&#x27;&lt;img id=&quot;img&quot; src=\\&#x27;&#x27;</span> + <span class=\"hljs-built_in\">url</span> + <span class=\"hljs-string\">&#x27;?&#x27;</span> + <span class=\"hljs-built_in\">Math</span>.random() + <span class=\"hljs-string\">&#x27;\\&#x27; /&gt;&#x27;</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&lt;iframe id=&quot;&#x27;</span> + iFrameid + <span class=\"hljs-string\">&#x27;&quot; src=&quot;javascript:parent.img;&quot; frameBorder=&quot;0&quot; scrolling=&quot;no&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;&#x27;</span>;\n}\n</code></pre>\n<p>这样可以正常显示图片，除了多了iframe外也没啥太大的问题，但是我发现在Vue里面一旦数据更新iframe就会刷新，外加上插件vue-draggable没法用了所以我就放弃这个方法了。这也促使我找更好的方案👇。</p>\n<h3 id=\"传送门--跳板\">传送门 | 跳板</h3>\n<p>所以最后我还是找到了一个好的方法，搜索引擎下，发现大部分的跳板都被清理了。不要慌，总会有的，对于怎么找到这个跳板的话，我的建议是怎么不去对比一下开头的两张图？😄😄😄</p>\n"}