{"title":"2019/04/history-api.md","path":"2019/04/history-api","slug":"2019_04_history-api","html":"<p><img align=\"center\" style=\"width: 100%;\" data-zoomable src=\"https://user-images.githubusercontent.com/21136420/56006752-c05db900-5d08-11e9-94c3-61938d3f2eeb.png\" alt=\"无标题绘图\" ></p>\n<p>有个需求，需要修改短链跳转到落地页后，在落地页返回的历史记录。避免出现跳转到落地页后返回还是出现短链中转的问题。</p>\n<p>要求：</p>\n<ol>\n<li>无法控制落地页的所有代码。</li>\n<li>回退页面可在短链内进行定义。 </li>\n</ol>\n<h3 id=\"history-api\">History Api</h3>\n<p>history api提供浏览器修改历史记录功能。简单罗列下api的一些使用。</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-comment\">// 返回上一个历史记录</span>\n<span class=\"hljs-built_in\">window</span>.history.back()\n<span class=\"hljs-built_in\">window</span>.history.go(<span class=\"hljs-number\">-1</span>)\n\n<span class=\"hljs-comment\">// 前进一个历史记录</span>\n<span class=\"hljs-built_in\">window</span>.history.forward()\n<span class=\"hljs-built_in\">window</span>.history.go(<span class=\"hljs-number\">1</span>)\n\n<span class=\"hljs-comment\">// 添加或者替换历史记录条目，注意这【并不会刷新页面】。</span>\nhistory.pushState(state, title, url);\n<span class=\"hljs-comment\">// state：网址相关的状态Object，在popstate事件触发时，会在回调函数中接收到这个对象。不需要的话可以设为null。</span>\n<span class=\"hljs-comment\">// title：新页面的title属性，填null。</span>\n<span class=\"hljs-comment\">// url：新的页面地址，必须必须和上一个页面处于同域，否则抛出异常。</span>\n\n<span class=\"hljs-comment\">// 替换当前的历史记录，注意这【并不会刷新页面】。</span>\nhistory.replaceState(state, title, url);\n<span class=\"hljs-comment\">// 参数同上。</span></code></pre>\n<h3 id=\"实现的思考\">实现的思考</h3>\n<ol>\n<li><p>第一次尝试。既然要实现在落地页返回的历史，可不可以在短链中转页上监听一下上一页面的url，当然在跳转到落地页之前可以在落地页的url上带上参数，可以在短链中转页上通过是否带这个参数进行判断。放弃，理由是麻烦而且不稳定，可能出现难以预料的问题。</p>\n</li>\n<li><p>第二次尝试。使用历史记录api修改历史记录。要修改的页面是短链中转页的历史记录，需要替换【当前】短链中转页的历史，使得跳转到落地页到上一个历史是短链所配置到页面。</p>\n</li>\n</ol>\n<p>需要注意到是，历史记录不能replace或者push不同域的url。所以需要通过一个queryString进行判断。所以做法是：</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-built_in\">window</span>.onload = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-keyword\">if</span> (getParam(<span class=\"hljs-string\">'backUrl'</span>, location.href)) {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'进入跳转到预定回退页'</span>)\n        location.replace(getParam(<span class=\"hljs-string\">'backUrl'</span>, location.href))\n      } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'进入跳转到落地页并改写历史'</span>)\n        history.replaceState(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">null</span>,  <span class=\"hljs-string\">\"[域名、处理返回逻辑页面]?backUrl=https://www.baidu.com\"</span>)\n        <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">'jump-id'</span>).click() <span class=\"hljs-comment\">// 跳转到落地页</span>\n      }\n    }\n<span class=\"hljs-comment\">// getParam是获取链接qs参数的函数。</span></code></pre>\n","fmData":{"attributes":{"title":"修改浏览器回退历史","description":"有个需求，需要修改短链跳转到落地页后，在落地页返回的历史记录。避免出现跳转到落地页后返回还是出现短链中转的问题。","keywords":"浏览器,回退历史，history api,pushState,replaceState","labels":["前端"],"date":"2019-04-12T00:00:00.000Z"},"body":"![无标题绘图](https://user-images.githubusercontent.com/21136420/56006752-c05db900-5d08-11e9-94c3-61938d3f2eeb.png)\n\n有个需求，需要修改短链跳转到落地页后，在落地页返回的历史记录。避免出现跳转到落地页后返回还是出现短链中转的问题。\n\n要求：\n1. 无法控制落地页的所有代码。\n2. 回退页面可在短链内进行定义。 \n\n### History Api\n\nhistory api提供浏览器修改历史记录功能。简单罗列下api的一些使用。\n\n```javascript\n// 返回上一个历史记录\nwindow.history.back()\nwindow.history.go(-1)\n\n// 前进一个历史记录\nwindow.history.forward()\nwindow.history.go(1)\n\n// 添加或者替换历史记录条目，注意这【并不会刷新页面】。\nhistory.pushState(state, title, url);\n// state：网址相关的状态Object，在popstate事件触发时，会在回调函数中接收到这个对象。不需要的话可以设为null。\n// title：新页面的title属性，填null。\n// url：新的页面地址，必须必须和上一个页面处于同域，否则抛出异常。\n\n// 替换当前的历史记录，注意这【并不会刷新页面】。\nhistory.replaceState(state, title, url);\n// 参数同上。\n```\n\n### 实现的思考\n\n1. 第一次尝试。既然要实现在落地页返回的历史，可不可以在短链中转页上监听一下上一页面的url，当然在跳转到落地页之前可以在落地页的url上带上参数，可以在短链中转页上通过是否带这个参数进行判断。放弃，理由是麻烦而且不稳定，可能出现难以预料的问题。\n\n2. 第二次尝试。使用历史记录api修改历史记录。要修改的页面是短链中转页的历史记录，需要替换【当前】短链中转页的历史，使得跳转到落地页到上一个历史是短链所配置到页面。\n\n需要注意到是，历史记录不能replace或者push不同域的url。所以需要通过一个queryString进行判断。所以做法是：\n```javascript\nwindow.onload = function() {\n      if (getParam('backUrl', location.href)) {\n        console.log('进入跳转到预定回退页')\n        location.replace(getParam('backUrl', location.href))\n      } else {\n        console.log('进入跳转到落地页并改写历史')\n        history.replaceState(null, null,  \"[域名、处理返回逻辑页面]?backUrl=https://www.baidu.com\")\n        document.getElementById('jump-id').click() // 跳转到落地页\n      }\n    }\n// getParam是获取链接qs参数的函数。\n```","bodyBegin":9,"frontmatter":"title: 修改浏览器回退历史\ndescription: 有个需求，需要修改短链跳转到落地页后，在落地页返回的历史记录。避免出现跳转到落地页后返回还是出现短链中转的问题。\nkeywords: 浏览器,回退历史，history api,pushState,replaceState\nlabels: ['前端']\ndate: 2019-04-12"}}